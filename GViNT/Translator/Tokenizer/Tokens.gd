extends Reference

const IDENTIFIER = "IDENTIFIER"
const BLOCKED_KEYWORD = "BLOCKED_KEYWORD"
const BLOCKED_FUNC = "BLOCKED_FUNC"
const GDSCRIPT_CONST = "GDSCRIPT_CONST"
const GDSCRIPT_FUNC = "GDSCRIPT_FUNC"

const LINEBREAK = "LINEBREAK"
const DOT = "DOT"
const COMMA = "COMMA"
const COLON = "COLON"

const STRING = "STRING"
const STRING_MULTILINE_CONT = "STRING_CONT"
const INT = "INT"
const FLOAT = "FLOAT"
const INLINE_TEXT = "TEXT"

const OPEN_PARENTHESIS = "OPEN_PAR"
const CLOSE_PARENTHESIS = "CLOSE_PAR"

const OPEN_BRACKET = "OPEN_BRACKET"
const CLOSE_BRACKET = "CLOSE_BRACKET"

const OPEN_BRACE = "OPEN_BRACE"
const CLOSE_BRACE = "CLOSE_BRACE"

const END_OF_FILE = "EOF"

const ASSIGN = "ASSIGN"
const ASSIGN_ADD = "ASSIGN_ADD"
const ASSIGN_SUBTRACT = "ASSIGN_SUB"
const ASSIGN_MULTIPLY = "ASSIGN_MULT"
const ASSIGN_DIVIDE = "ASSIGN_DIV"
const ASSIGN_MODULO = "ASSIGN_MOD"
const ASSIGN_AND = "ASSIGN_BIT_AND"
const ASSIGN_OR = "ASSIGN_BIT_OR"
const ASSIGN_SHIFT_RIGHT = "ASSIGN_BITSHIFT_RIGHT"
const ASSIGN_SHIFT_LEFT = "ASSIGN_BITSHIFT_LEFT"


const INVALID_OPERATOR = "INVALID_OPERATOR"
# arithmetic operators
const OP_ADD = "ADD"
const OP_SUBTRACT = "SUB"
const OP_MULTIPLY = "MULT"
const OP_DIVIDE = "DIV"
const OP_MODULO = "MOD"

# logical operators
const OP_EQUAL = "EQUAL"
const OP_GREATER_OR_EQUAL = "GR_EQUAL"
const OP_LESS_OR_EQUAL = "LS_EQUAL"
const OP_NOT_EQUAL = "NOT_EQUAL"
const OP_NEGATE = "NOT"
const OP_AND = "AND"
const OP_OR = "OR"

# bitwise operators
const OP_SHIFT_RIGHT = "BITSHIFT_RIGHT"
const OP_SHIFT_LEFT = "BITSHIFT_LEFT"
const OP_BITWISE_OR = "BIT_OR"
const OP_BITWISE_AND = "BIT_AND"
const OP_BITWISE_XOR = "BIT_XOR"
const OP_BITWISE_NOT = "BIT_NOT"

const KEYWORD_RETURN = "RETURN"
const KEYWORD_TRUE = "TRUE"
const KEYWORD_FALSE = "FALSE"
const KEYWORD_NOT = "NOT"
const KEYWORD_OR = "OR"
const KEYWORD_AND = "AND"
const KEYWORD_IN = "IN"
const KEYWORD_AS = "AS"
const KEYWORD_IF = "IF"
const KEYWORD_ELSE = "ELSE"
const KEYWORD_ELIF = "ELIF"


